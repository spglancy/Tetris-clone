{"version":3,"sources":["/Users/spglancy/dev/Tetris-clone/src/index.css","main.8a038ab4.chunk.css","/Users/spglancy/dev/Tetris-clone/src/App.css"],"names":[],"mappings":"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","file":"main.8a038ab4.chunk.css","sourcesContent":["body {\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#root, .App {\n  min-height: 100vh;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\n/* App */\n.App {\n  display: grid;\n  width: 100vw;\n\n  grid-gap: 10px;\n  /* Defines three columns of `--col-side`, `--col-center`, and `--col-side` widths. */\n  grid-template-columns: 1fr calc(var(--tile-size)*10) 1fr;\n  /* Defines three rows of `100px`, `--grid-height`, and 100px. */\n  grid-template-rows: 50px var(--grid-height) 100px;\n\n/* This defines the areas on the grid with names: 'h', 'l', 'c', 'r',\nand 'b'. The '.' represents an empty cell on the grid. */\n  grid-template-areas: \"h h h\"\n                       \"l c r\"\n                       \"b b b\";\n}\n\n@media (max-width: 768px) {\n  .App {\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 50px 65px var(--grid-size) 50px;\n    grid-template-areas: \"h h\"\n                         \"l r\"\n                         \"c c\"\n                         \"b b\"\n  }\n}\n\n.App-header {\n  grid-area: h;\n  background-color: #282c34;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n:root {\n  --bg-color: rgba(150, 150, 150, 1);\n  /* Border Colors are all transparent colors. These will tint or shade the background color of the square. */\n  --border-left-color: rgba(255, 255, 255, 0.20);\n  --border-top-color: rgba(255, 255, 255, 0.33);\n  --border-right-color: rgba(0, 0, 0, 0.15);\n  --border-bottom-color: rgba(0, 0, 0, 0.5);\n\n  /* Square Colors:  background colors for the squares.*/\n  --color-0: #eaeaea;\n  --color-1: #ff6600;\n  --color-2: #eec900;\n  --color-3: #0000ff;\n  --color-4: #cc00ff;\n  --color-5: #00ff00;\n  --color-6: #66ccff;\n  --color-7: #ff0000;\n\n  /* Button Colors */\n  --button-color-t: rgba(200, 200, 200, 1);\n  --button-color-r: rgba(150, 150, 150, 1);\n  --button-color-b: rgba(120, 120, 120, 1);\n  --button-color-l: rgba(222, 222, 222, 1);\n\n  /* Numbers define values that will be used throughout the CSS.\n  --tile-size: 20px for example will set size of the grid squares. */\n  --cols: 10;\n  --rows: 18;\n  --tile-size: 20px;\n}\n\n/* Colors */\n.color-0 {\n  background-color: var(--color-0);\n}\n\n.color-1 {\n  background-color: var(--color-1);\n}\n\n.color-2 {\n  background-color: var(--color-2);\n}\n\n.color-3 {\n  background-color: var(--color-3);\n}\n\n.color-4 {\n  background-color: var(--color-4);\n}\n\n.color-5 {\n  background-color: var(--color-5);\n}\n\n.color-6 {\n  background-color: var(--color-6);\n}\n\n.color-7 {\n  background-color: var(--color-7);\n}\n\n/* Grid Square */\n.grid-square {\n  border-style: solid;\n  width: var(--tile-size);\n  height: var(--tile-size);\n  border-width: 1px;\n  border-left-color: var(--border-left-color);\n  border-top-color: var(--border-top-color);\n  border-right-color: var(--border-right-color);\n  border-bottom-color: var(--border-bottom-color);\n}\n\n/* tells the browser to calculate the size boxes to include the border width rather than adding the border, which is the default */\n* {\n  box-sizing: border-box;\n}\n\n/* Grid Board - This defines the `grid-board` to display as `grid`. This causes the children of this element to arrange on a grid. The number of columns is set by `--cols` var and the width of each column is set by `--tile-size`. These two CSS custom properties are defined in `:root` which allow them to be easily changed.*/\n.grid-board {\n  display: grid;\n  grid-template-columns: repeat(var(--cols), var(--tile-size));\n  grid-gap: 0;\n  align-self: flex-start;\n  grid-area: c;\n  margin: auto;\n}\n\n/* Next Block */\n.next-block {\n  display: grid;\n  grid-template-columns: repeat(4, var(--tile-size));\n  align-self: flex-start;\n  grid-area: l;\n  margin: 10px;\n  justify-self: flex-end;\n}\n\n/* Score Board */\n.score-board {\n  grid-area: r;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 60%;\n  width: 90%;\n  margin: 10px;\n  justify-self: flex-start;\n  text-align: left;\n}\n\n@media (max-width: 768px) {\n  .score-board {\n    flex-direction: row;\n    height: 100%;\n    align-items: center;\n    justify-self: center;\n    margin: 0;\n  }\n}\n\n.score-board-button {\n  padding: 15px;\n  height: max-content;\n  width: max-content;\n  border: 1px solid rgb(62, 115, 230);\n  color: rgb(62, 115, 230);\n  background: white;\n  font-weight: 600;\n  border-radius: 5px;\n}\n\n/* controls */\n.controls {\n  grid-area: b;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n@media (min-width: 769px) {\n  .controls {\n    width: 30%;\n    margin: auto;\n  }\n}\n\n.control-button {\n  width: max-content;\n  height: max-content;\n  padding: 15px;\n  border-radius: 5px;\n  border: 1px solid rgb(62, 115, 230);\n  color: rgb(62, 115, 230);\n  background: white;\n  font-size: 1em;\n  font-weight: 600;\n}\n\n@media (max-width: 768px) {\n  .controls {\n    width: 80%;\n    margin: auto;\n  }\n\n  .control-button {\n    font-size: .7em;\n  }\n}\n\n/* Message Popup - These styles apply to the `MessagePopup` container. With `position:absolute` this element can be placed anywhere on the screen, `left, top, transform:translate` perform this function.*/\n.message-popup {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: calc(var(--tile-size) * 10);\n  height: calc(var(--tile-size) * 10);\n  background-color: rgba(255, 255, 255, 0.5);\n  text-align: center;\n}\n\n/* This style is applied only when the message popup container\nhas both `message-popup` class and the `hidden` class. In this\ncase the Message Popup is not displayed */\n.message-popup.hidden {\n  display: none;\n}","body {\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#root, .App {\n  min-height: 100vh;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\n/* App */\n.App {\n  display: grid;\n  width: 100vw;\n\n  grid-gap: 10px;\n  /* Defines three columns of `--col-side`, `--col-center`, and `--col-side` widths. */\n  grid-template-columns: 1fr calc(20px*10) 1fr;\n  grid-template-columns: 1fr calc(var(--tile-size)*10) 1fr;\n  /* Defines three rows of `100px`, `--grid-height`, and 100px. */\n  grid-template-rows: 50px var(--grid-height) 100px;\n\n/* This defines the areas on the grid with names: 'h', 'l', 'c', 'r',\nand 'b'. The '.' represents an empty cell on the grid. */\n  grid-template-areas: \"h h h\"\n                       \"l c r\"\n                       \"b b b\";\n}\n\n@media (max-width: 768px) {\n  .App {\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 50px 65px var(--grid-size) 50px;\n    grid-template-areas: \"h h\"\n                         \"l r\"\n                         \"c c\"\n                         \"b b\"\n  }\n}\n\n.App-header {\n  grid-area: h;\n  background-color: #282c34;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-direction: column;\n          flex-direction: column;\n  -webkit-align-items: center;\n          align-items: center;\n  -webkit-justify-content: center;\n          justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n:root {\n  --bg-color: rgba(150, 150, 150, 1);\n  /* Border Colors are all transparent colors. These will tint or shade the background color of the square. */\n  --border-left-color: rgba(255, 255, 255, 0.20);\n  --border-top-color: rgba(255, 255, 255, 0.33);\n  --border-right-color: rgba(0, 0, 0, 0.15);\n  --border-bottom-color: rgba(0, 0, 0, 0.5);\n\n  /* Square Colors:  background colors for the squares.*/\n  --color-0: #eaeaea;\n  --color-1: #ff6600;\n  --color-2: #eec900;\n  --color-3: #0000ff;\n  --color-4: #cc00ff;\n  --color-5: #00ff00;\n  --color-6: #66ccff;\n  --color-7: #ff0000;\n\n  /* Button Colors */\n  --button-color-t: rgba(200, 200, 200, 1);\n  --button-color-r: rgba(150, 150, 150, 1);\n  --button-color-b: rgba(120, 120, 120, 1);\n  --button-color-l: rgba(222, 222, 222, 1);\n\n  /* Numbers define values that will be used throughout the CSS.\n  --tile-size: 20px for example will set size of the grid squares. */\n  --cols: 10;\n  --rows: 18;\n  --tile-size: 20px;\n}\n\n/* Colors */\n.color-0 {\n  background-color: #eaeaea;\n  background-color: var(--color-0);\n}\n\n.color-1 {\n  background-color: #ff6600;\n  background-color: var(--color-1);\n}\n\n.color-2 {\n  background-color: #eec900;\n  background-color: var(--color-2);\n}\n\n.color-3 {\n  background-color: #0000ff;\n  background-color: var(--color-3);\n}\n\n.color-4 {\n  background-color: #cc00ff;\n  background-color: var(--color-4);\n}\n\n.color-5 {\n  background-color: #00ff00;\n  background-color: var(--color-5);\n}\n\n.color-6 {\n  background-color: #66ccff;\n  background-color: var(--color-6);\n}\n\n.color-7 {\n  background-color: #ff0000;\n  background-color: var(--color-7);\n}\n\n/* Grid Square */\n.grid-square {\n  border-style: solid;\n  width: 20px;\n  width: var(--tile-size);\n  height: 20px;\n  height: var(--tile-size);\n  border-width: 1px;\n  border-left-color: rgba(255, 255, 255, 0.20);\n  border-left-color: var(--border-left-color);\n  border-top-color: rgba(255, 255, 255, 0.33);\n  border-top-color: var(--border-top-color);\n  border-right-color: rgba(0, 0, 0, 0.15);\n  border-right-color: var(--border-right-color);\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n  border-bottom-color: var(--border-bottom-color);\n}\n\n/* tells the browser to calculate the size boxes to include the border width rather than adding the border, which is the default */\n* {\n  box-sizing: border-box;\n}\n\n/* Grid Board - This defines the `grid-board` to display as `grid`. This causes the children of this element to arrange on a grid. The number of columns is set by `--cols` var and the width of each column is set by `--tile-size`. These two CSS custom properties are defined in `:root` which allow them to be easily changed.*/\n.grid-board {\n  display: grid;\n  grid-template-columns: repeat(10, 20px);\n  grid-template-columns: repeat(var(--cols), var(--tile-size));\n  grid-gap: 0;\n  align-self: flex-start;\n  grid-area: c;\n  margin: auto;\n}\n\n/* Next Block */\n.next-block {\n  display: grid;\n  grid-template-columns: repeat(4, 20px);\n  grid-template-columns: repeat(4, var(--tile-size));\n  align-self: flex-start;\n  grid-area: l;\n  margin: 10px;\n  justify-self: flex-end;\n}\n\n/* Score Board */\n.score-board {\n  grid-area: r;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-direction: column;\n          flex-direction: column;\n  -webkit-justify-content: space-around;\n          justify-content: space-around;\n  height: 60%;\n  width: 90%;\n  margin: 10px;\n  justify-self: flex-start;\n  text-align: left;\n}\n\n@media (max-width: 768px) {\n  .score-board {\n    -webkit-flex-direction: row;\n            flex-direction: row;\n    height: 100%;\n    -webkit-align-items: center;\n            align-items: center;\n    justify-self: center;\n    margin: 0;\n  }\n}\n\n.score-board-button {\n  padding: 15px;\n  height: -webkit-max-content;\n  height: -moz-max-content;\n  height: max-content;\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content;\n  border: 1px solid rgb(62, 115, 230);\n  color: rgb(62, 115, 230);\n  background: white;\n  font-weight: 600;\n  border-radius: 5px;\n}\n\n/* controls */\n.controls {\n  grid-area: b;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-direction: row;\n          flex-direction: row;\n  -webkit-justify-content: space-between;\n          justify-content: space-between;\n}\n\n@media (min-width: 769px) {\n  .controls {\n    width: 30%;\n    margin: auto;\n  }\n}\n\n.control-button {\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content;\n  height: -webkit-max-content;\n  height: -moz-max-content;\n  height: max-content;\n  padding: 15px;\n  border-radius: 5px;\n  border: 1px solid rgb(62, 115, 230);\n  color: rgb(62, 115, 230);\n  background: white;\n  font-size: 1em;\n  font-weight: 600;\n}\n\n@media (max-width: 768px) {\n  .controls {\n    width: 80%;\n    margin: auto;\n  }\n\n  .control-button {\n    font-size: .7em;\n  }\n}\n\n/* Message Popup - These styles apply to the `MessagePopup` container. With `position:absolute` this element can be placed anywhere on the screen, `left, top, transform:translate` perform this function.*/\n.message-popup {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  width: calc(20px * 10);\n  width: calc(var(--tile-size) * 10);\n  height: calc(20px * 10);\n  height: calc(var(--tile-size) * 10);\n  background-color: rgba(255, 255, 255, 0.5);\n  text-align: center;\n}\n\n/* This style is applied only when the message popup container\nhas both `message-popup` class and the `hidden` class. In this\ncase the Message Popup is not displayed */\n.message-popup.hidden {\n  display: none;\n}\n.App {\n  text-align: center;\n}\n\n.App-logo {\n  -webkit-animation: App-logo-spin infinite 20s linear;\n          animation: App-logo-spin infinite 20s linear;\n  height: 40vmin;\n  pointer-events: none;\n}\n\n.App-header {\n  background-color: #282c34;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-direction: column;\n          flex-direction: column;\n  -webkit-align-items: center;\n          align-items: center;\n  -webkit-justify-content: center;\n          justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@-webkit-keyframes App-logo-spin {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes App-logo-spin {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n",".App {\n  text-align: center;\n}\n\n.App-logo {\n  animation: App-logo-spin infinite 20s linear;\n  height: 40vmin;\n  pointer-events: none;\n}\n\n.App-header {\n  background-color: #282c34;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n"]}